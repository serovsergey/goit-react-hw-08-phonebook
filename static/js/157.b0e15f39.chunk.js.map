{"version":3,"file":"static/js/157.b0e15f39.chunk.js","mappings":"4PACA,EAA4B,gCAA5B,EAAmE,2B,uCCwFnE,EA9EqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,GACI,mBACPE,SAAS,oBACZC,MAAOH,EAAAA,GACG,oBACPG,MAAM,uBACND,SAAS,qBACZE,SAAUJ,EAAAA,GACA,uBACPK,IAAI,EAAG,qDACPH,SAAS,0BAGRI,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbP,KAAM,SACNE,MAAO,aACPC,SAAU,YAEZL,iBAAAA,EACAU,SAAU,SAAAC,GACRb,EAASc,EAAAA,EAAAA,SAAwBD,IAASE,SACvCC,MAAK,kBAAMC,EAAAA,GAAAA,KAAW,uBAAjB,IACLC,OAAM,SAACC,GAAD,OAAWF,EAAAA,GAAAA,MAAA,2CAAgDE,EAAMC,SAAjE,GACV,IAGH,OACE,UAACC,EAAA,EAAD,CAAOC,UAAW,EAAGC,UAAWC,EAAhC,WACE,SAACC,EAAA,EAAD,CAAYC,UAAW,KAAMC,QAAS,KAAMC,MAAO,SAAnD,gCAGA,kBAAMhB,SAAUH,EAAOoB,aAAcN,UAAWC,EAAhD,WACE,SAACM,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,OACH5B,KAAK,OACL6B,MAAM,OACNC,MAAOzB,EAAOI,OAAOT,KACrB+B,SAAU1B,EAAO2B,aACjBjB,MAAOV,EAAO4B,QAAQjC,MAAQkC,QAAQ7B,EAAO8B,OAAOnC,MACpDoC,WAAY/B,EAAO4B,QAAQjC,MAAQK,EAAO8B,OAAOnC,QAEnD,SAAC0B,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACH5B,KAAK,QACL6B,MAAM,QACNC,MAAOzB,EAAOI,OAAOP,MACrB6B,SAAU1B,EAAO2B,aACjBjB,MAAOV,EAAO4B,QAAQ/B,OAASgC,QAAQ7B,EAAO8B,OAAOjC,OACrDkC,WAAY/B,EAAO4B,QAAQ/B,OAASG,EAAO8B,OAAOjC,SAEpD,SAACwB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACH5B,KAAK,WACL6B,MAAM,WACNQ,KAAK,WACLP,MAAOzB,EAAOI,OAAON,SACrB4B,SAAU1B,EAAO2B,aACjBjB,MAAOV,EAAO4B,QAAQ9B,UAAY+B,QAAQ7B,EAAO8B,OAAOhC,UACxDiC,WAAY/B,EAAO4B,QAAQ9B,UAAYE,EAAO8B,OAAOhC,YAEvD,SAACmC,EAAA,EAAD,CAAQC,MAAM,UAAUhB,QAAQ,YAAYc,KAAK,SAAjD,2BAMP,C","sources":["webpack://react-homework-template/./src/pages/RegisterPage/registerPage.module.scss?6e71","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"registerPage_container__mZ5HJ\",\"form\":\"registerPage_form__-TYnA\"};","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Button, Paper, TextField, Typography } from '@mui/material';\n\nimport s from './registerPage.module.scss';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/operations.auth';\nimport { toast } from 'react-toastify';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const validationSchema = yup.object({\n    name: yup\n      .string('Enter your name')\n      .required('Name is required'),\n    email: yup\n      .string('Enter your email')\n      .email('Enter a valid email')\n      .required('Email is required'),\n    password: yup\n      .string('Enter your password')\n      .min(8, 'Password should be of minimum 8 characters length')\n      .required('Password is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: 'sergey',\n      email: '@gmail.com',\n      password: '11111111',\n    },\n    validationSchema,\n    onSubmit: values => {\n      dispatch(authOperations.register(values)).unwrap()\n        .then(() => toast.info('You have registered!'))\n        .catch((error) => toast.error(`Failed to register with error: \\n${error.message}`));\n    },\n  });\n\n  return (\n    <Paper elevation={4} className={s.container}>\n      <Typography component={'h2'} variant={'h4'} align={'center'}>\n        Register new user\n      </Typography>\n      <form onSubmit={formik.handleSubmit} className={s.form}>\n        <TextField\n          fullWidth\n          id=\"name\"\n          name='name'\n          label=\"Name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </Paper>\n  )\n};\n\n// RegisterPage.propTypes = {};\n\nexport default RegisterPage;\n"],"names":["dispatch","useDispatch","validationSchema","yup","name","required","email","password","min","formik","useFormik","initialValues","onSubmit","values","authOperations","unwrap","then","toast","catch","error","message","Paper","elevation","className","s","Typography","component","variant","align","handleSubmit","TextField","fullWidth","id","label","value","onChange","handleChange","touched","Boolean","errors","helperText","type","Button","color"],"sourceRoot":""}