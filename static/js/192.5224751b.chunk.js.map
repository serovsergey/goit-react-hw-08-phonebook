{"version":3,"file":"static/js/192.5224751b.chunk.js","mappings":"4PACA,EAA4B,4BAA5B,EAA+D,uB,6BCqF/D,EA5EiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,GACI,mBACPE,SAAS,oBACZC,MAAOH,EAAAA,GACG,oBACPG,MAAM,uBACND,SAAS,qBACZE,SAAUJ,EAAAA,GACA,uBACPK,IAAI,EAAG,qDACPH,SAAS,0BAGRI,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbP,KAAM,SACNE,MAAO,aACPC,SAAU,YAEZL,iBAAAA,EACAU,SAAU,SAAAC,GACRb,EAASc,EAAAA,EAAAA,SAAwBD,GAClC,IAGH,OACE,UAACE,EAAA,EAAD,CAAOC,UAAW,EAAGC,UAAWC,EAAhC,WACE,SAACC,EAAA,EAAD,CAAYC,UAAW,KAAMC,QAAS,KAAMC,MAAO,SAAnD,gCAGA,kBAAMV,SAAUH,EAAOc,aAAcN,UAAWC,EAAhD,WACE,SAACM,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,OACHtB,KAAK,OACLuB,MAAM,OACNC,MAAOnB,EAAOI,OAAOT,KACrByB,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQ5B,MAAQ6B,QAAQxB,EAAOyB,OAAO9B,MACpD+B,WAAY1B,EAAOuB,QAAQ5B,MAAQK,EAAOyB,OAAO9B,QAEnD,SAACoB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHtB,KAAK,QACLuB,MAAM,QACNC,MAAOnB,EAAOI,OAAOP,MACrBuB,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQ1B,OAAS2B,QAAQxB,EAAOyB,OAAO5B,OACrD6B,WAAY1B,EAAOuB,QAAQ1B,OAASG,EAAOyB,OAAO5B,SAEpD,SAACkB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHtB,KAAK,WACLuB,MAAM,WACNS,KAAK,WACLR,MAAOnB,EAAOI,OAAON,SACrBsB,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQzB,UAAY0B,QAAQxB,EAAOyB,OAAO3B,UACxD4B,WAAY1B,EAAOuB,QAAQzB,UAAYE,EAAOyB,OAAO3B,YAEvD,SAAC8B,EAAA,EAAD,CAAQC,MAAM,UAAUjB,QAAQ,YAAYe,KAAK,SAAjD,2BAMP,C","sources":["webpack://react-homework-template/./src/pages/Register/register.module.scss?dc3e","pages/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"register_container__Ct6-d\",\"form\":\"register_form__1mJlV\"};","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Button, Paper, TextField, Typography } from '@mui/material';\n\nimport s from './register.module.scss';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/operations.auth';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n\n  const validationSchema = yup.object({\n    name: yup\n      .string('Enter your name')\n      .required('Name is required'),\n    email: yup\n      .string('Enter your email')\n      .email('Enter a valid email')\n      .required('Email is required'),\n    password: yup\n      .string('Enter your password')\n      .min(8, 'Password should be of minimum 8 characters length')\n      .required('Password is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: 'sergey',\n      email: '@gmail.com',\n      password: '11111111',\n    },\n    validationSchema,\n    onSubmit: values => {\n      dispatch(authOperations.register(values))\n    },\n  });\n\n  return (\n    <Paper elevation={4} className={s.container}>\n      <Typography component={'h2'} variant={'h4'} align={'center'}>\n        Register new user\n      </Typography>\n      <form onSubmit={formik.handleSubmit} className={s.form}>\n        <TextField\n          fullWidth\n          id=\"name\"\n          name='name'\n          label=\"Name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </Paper>\n  )\n};\n\n// Register.propTypes = {};\n\nexport default Register;\n"],"names":["dispatch","useDispatch","validationSchema","yup","name","required","email","password","min","formik","useFormik","initialValues","onSubmit","values","authOperations","Paper","elevation","className","s","Typography","component","variant","align","handleSubmit","TextField","fullWidth","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","color"],"sourceRoot":""}