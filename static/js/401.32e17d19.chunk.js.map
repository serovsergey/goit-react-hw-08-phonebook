{"version":3,"file":"static/js/401.32e17d19.chunk.js","mappings":"sQACA,EAA4B,6BAA5B,EAAgE,wB,iDC+EhE,EApEkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,cAExBC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,oBACPC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,GACA,uBACPI,IAAI,EAAG,qDACPF,SAAS,0BAGRG,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CAGbN,MAAO,GACPE,SAAU,IAEZJ,iBAAAA,EACAS,SAAU,SAACC,EAAD,GAA2B,EAAhBC,UACnBhB,EAASiB,EAAAA,EAAAA,MAAqBF,IAASG,SACpCC,OAAM,SAACC,GAAD,OAAWC,EAAAA,GAAAA,MAAA,uCAA4CD,EAAME,SAA7D,GAEV,IAIH,OACE,UAACC,EAAA,EAAD,CAAOC,UAAW,EAAGC,UAAWC,EAAhC,WACE,SAACC,EAAA,EAAD,CAAYC,UAAW,KAAMC,QAAS,KAAMC,MAAO,SAAnD,oBAGA,kBAAMhB,SAAUH,EAAOoB,aAAcN,UAAWC,EAAhD,WACE,SAACM,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAO1B,EAAOI,OAAOR,MACrB+B,SAAU3B,EAAO4B,aACjBnB,MAAOT,EAAO6B,QAAQjC,OAASkC,QAAQ9B,EAAO+B,OAAOnC,OACrDoC,WAAYhC,EAAO6B,QAAQjC,OAASI,EAAO+B,OAAOnC,SAEpD,SAACyB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNQ,KAAK,WACLP,MAAO1B,EAAOI,OAAON,SACrB6B,SAAU3B,EAAO4B,aACjBnB,MAAOT,EAAO6B,QAAQ/B,UAAYgC,QAAQ9B,EAAO+B,OAAOjC,UACxDkC,WAAYhC,EAAO6B,QAAQ/B,UAAYE,EAAO+B,OAAOjC,YAEvD,UAACoC,EAAA,EAAD,CAAQC,MAAM,UAAUjB,QAAQ,YAAYe,KAAK,SAASG,SAAU7C,EAApE,mBACSA,IAAa,SAAC8C,EAAA,EAAD,CAAkBC,KAAM,aAKrD,C","sources":["webpack://react-homework-template/./src/pages/LoginPage/loginPage.module.scss?3839","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"loginPage_container__xhSVg\",\"form\":\"loginPage_form__nGdKj\"};","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Button, CircularProgress, Paper, TextField, Typography } from '@mui/material';\n\nimport s from './loginPage.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport authOperations from 'redux/auth/operations.auth';\nimport authSelectors from 'redux/auth/selector.auth';\nimport { toast } from 'react-toastify';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(authSelectors.getIsLoading);\n\n  const validationSchema = yup.object({\n    email: yup\n      .string('Enter your email')\n      .email('Enter a valid email')\n      .required('Email is required'),\n    password: yup\n      .string('Enter your password')\n      .min(8, 'Password should be of minimum 8 characters length')\n      .required('Password is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      // email: 'serovsergey79@gmail.com',\n      // password: 'ssa260579',\n      email: '',\n      password: '',\n    },\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      dispatch(authOperations.login(values)).unwrap()\n        .catch((error) => toast.error(`Login failed with message: \\n${error.message}`));\n      // resetForm();\n    },\n  });\n\n\n  return (\n    <Paper elevation={4} className={s.container}>\n      <Typography component={'h2'} variant={'h4'} align={'center'}>\n        Login\n      </Typography>\n      <form onSubmit={formik.handleSubmit} className={s.form}>\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" type=\"submit\" disabled={isLoading}>\n          Login {isLoading && <CircularProgress size={24} />}\n        </Button>\n      </form>\n    </Paper>\n  )\n};\n\n// LoginPage.propTypes = {};\n\nexport default LoginPage;\n"],"names":["dispatch","useDispatch","isLoading","useSelector","authSelectors","validationSchema","yup","email","required","password","min","formik","useFormik","initialValues","onSubmit","values","resetForm","authOperations","unwrap","catch","error","toast","message","Paper","elevation","className","s","Typography","component","variant","align","handleSubmit","TextField","fullWidth","id","name","label","value","onChange","handleChange","touched","Boolean","errors","helperText","type","Button","color","disabled","CircularProgress","size"],"sourceRoot":""}